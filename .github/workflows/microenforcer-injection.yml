name: MicroEnforcer Injection CI

on:
  push:
    branches: [ "main" ]

env:
  # Authenticate with Aqua Registry - optional if Aqua Scanner is pushed to local private registry
  AQUA_USER: ${{ secrets.AQUA_USER }} # Aqua Registry
  AQUA_PASSWORD: ${{ secrets.AQUA_PASSWORD }} # Aqua Registry

  # Authenticate the Aqua Scanner with Aqua Server 
  AQUA_SCANNER_USER: ${{ secrets.AQUA_SCANNER_USER }} # Aqua Scanner authentication
  AQUA_SCANNER_PASSWORD: ${{ secrets.AQUA_SCANNER_PASSWORD }} # Aqua Scanner authentication
  AQUA_SERVER_URL: ${{ secrets.AQUA_SERVER_URL }} # Aqua Scanner authentication

  # MicroEnforcer embedding/injection variables 
  AQUA_GATEWAY: ${{ secrets.AQUA_GATEWAY }} # Aqua Gateway address
  AQUA_ME_EnforcerGroup_Token: ${{ secrets.AQUA_ME_EnforcerGroup_Token }} # Authenticates the MicroEnforcer with the Aqua Server

  # Authenticate with local/private registry. Can be ECR/ACR/GCR etc. 
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }} # Docker Registry authentication
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }} # Docker Registry authentication

  # Env Var for the generic purposes
  BUILD_NUMBER: ${{ github.run_id }}
  BUILD_NAME: ${{ github.repository }}
  GITHUB_WORKSPACE: ${{ github.workspace }}
  SRC_IMAGE: stanhoe/spring4shell:latest # Source image naming 
  DST_IMAGE: stanhoe/spring4shell:${{ github.run_id }} # Output image naming (After ME injection)
  
jobs:       
  build:
    name: Build Image, Inject MicroEnforcer, Scan Image, and Push Image
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Pull the Container Image
      run: docker pull $SRC_IMAGE
      
    - name: Inject MicroEnforcer with aquactl 
      run: |
        wget --user $AQUA_USER --password $AQUA_PASSWORD https://get.aquasec.com/aquactl/v3/aquactl 
        chmod +x aquactl
        wget --user $AQUA_USER --password $AQUA_PASSWORD https://download.aquasec.com/micro-enforcer/2022.4.460/x86/microenforcer
        chmod +x microenforcer 
        sudo ./aquactl inject --src-image $SRC_IMAGE --dst-image $DST_IMAGE --microenforcer-binary ./microenforcer --aqua-server $AQUA_GATEWAY --aqua-token $AQUA_ME_EnforcerGroup_Token
        
    - name: Aqua Image Scanner - Scan Embedded Image and Register to Aqua Console # Note the --registry and --register-compliant command 
      run: |
        docker image ls
        docker login registry.aquasec.com -u $AQUA_USER -p $AQUA_PASSWORD
        docker pull registry.aquasec.com/scanner:2022.4
        docker run --rm -v $GITHUB_WORKSPACE:/tmp -v /var/run/docker.sock:/var/run/docker.sock -e BUILD_NUMBER=$BUILD_NUMBER -e BUILD_JOB_NAME=$BUILD_NAME registry.aquasec.com/scanner:2022.4 scan -w /tmp --host $AQUA_SERVER_URL --user $AQUA_SCANNER_USER --password $AQUA_SCANNER_PASSWORD --show-negligible --local $DST_IMAGE --htmlfile /tmp/out.html --jsonfile /tmp/out.json --register-compliant --registry "My_Registry" > /dev/null
        
    - name: Push Scanned Embedded image to Local/Private Container Registry
      run: |
        docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
        docker push $DST_IMAGE 
      
    - uses: actions/upload-artifact@v3
      with:
        name: aqua-artifact
        path: out.*
